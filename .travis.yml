---
dist: xenial
sudo: required
language: python

env:
  - DOCKER_COMPOSE_VERSION=1.24.0

services:
  - docker


# Install an up to date (ish) docker-compose
before_install:
  - sudo apt-get update
  - sudo apt-get -y install python3-pip python-dev
  - sudo apt-get update
  - sudo apt-get install software-properties-common
  - sudo apt-add-repository --yes --update ppa:ansible/ansible
  - sudo apt-get install ansible
  - sudo rm /usr/local/bin/docker-compose
  - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin
  - sudo useradd -m metacpan -g users -G docker

before_script:
  - ansible --version | grep "python version"

script:
  - ansible-galaxy install --roles-path ./galaxy -r requirements.yml

  # Test user deployment via ansible
  - ansible-playbook -i inventories/ansible_test tests/users.yml --syntax-check
  - ansible-playbook -i inventories/ansible_test tests/users.yml
  - idempotence=$(mktemp)
  - >
    sudo ansible-playbook -i inventories/ansible_test tests/users.yml | tee -a ${idempotence}
  - >
    tail ${idempotence}
    | grep -q 'changed=1.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)

  # Test metacpan-docker-production deployment via ansible
  - ansible-playbook -i inventories/ansible_test tests/deploy_docker_mgmt.yml --syntax-check
  - ansible-playbook -i inventories/ansible_test tests/deploy_docker_mgmt.yml
  - >
    grep 'HONEYCOMB_DATASET="ZZZ"' /home/metacpan/docker-production/logging.env
    && (echo 'Configuration updated test: pass' && exit 0)
    || (echo 'Configuration updated test: fail' && exit 1)
  - idempotence=$(mktemp)
  - >
    sudo ansible-playbook -i inventories/ansible_test tests/deploy_docker_mgmt.yml | tee -a ${idempotence}
  - >
    tail ${idempotence}
    | grep -q 'changed=2.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)

  # Test site deployment with github-meets-cpan
  # The docker-compose commands always register a change, even when docker reports that
  # no change is going to occur, thus the expected changes are taken into account during
  # the idempotence tests
  - ansible-playbook -i inventories/ansible_test tests/deploy_github-meets-cpan.yml --syntax-check
  - ansible-playbook -i inventories/ansible_test tests/deploy_github-meets-cpan.yml
  - idempotence=$(mktemp)
  - >
    sudo ansible-playbook -i inventories/ansible_test tests/deploy_github-meets-cpan.yml | tee -a ${idempotence}
  - >
    tail ${idempotence}
    | grep -q 'changed=2.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)
  - grep github-meets-cpan-cron /etc/cron.d/github-meets-cpan

  - cd /home/metacpan/docker-production && /usr/local/bin/docker-compose ps
