---

- name: "{{ site }} -- Create templated configuration directory"
  file:
    dest: "{{ docker_mgmt['directory'] | mandatory }}/{{ site | mandatory }}"
    mode: "755"
    owner: "{{ metacpan_user | default(docker_mgmt.git.user) }}"
    group: "{{ metacpan_user | default(docker_mgmt.git.user) }}"
    state: directory
  become: yes
  when: site_config_type is undefined
   or site_config_type != "template"


- name: "{{ site }} -- Create templated configuration file"
  file:
    dest: "{{ docker_mgmt['directory'] | mandatory }}/{{ site | mandatory }}/environment.json"
    mode: "644"
    owner: "{{ metacpan_user | default(docker_mgmt.git.user) }}"
    group: "{{ metacpan_user | default(docker_mgmt.git.user) }}"
    state: touch
  become: yes
  when: site_config_type is undefined
   or site_config_type != "template"

- name: "{{ site }} -- Integrate environment settings"
  lineinfile:
    path: "{{ docker_mgmt['directory'] | mandatory }}/{{ site | mandatory }}/environment.json"
    state: present
    regexp: >-
      (?i)^(\s+)"({{ item.key }})"(\s*)\:(\s*)"
    line: >-
      \1"\2"\3:\4"{{ item.value }}"
    backrefs: yes
  loop: "{{ settings[ site ] | default({}) | dict2items }}"
  become: yes
  become_user: "{{ metacpan_user | default(docker_mgmt.git.user) }}"
  when: site_config_type is undefined
   or site_config_type != "template"

- name: "{{ site }} -- Create templated configuration path"
  file:
    dest: "{{ site_config_file | dirname }}"
    mode: "644"
    owner: root
    group: "{{ metacpan_user | default(docker_mgmt.git.user) }}"
    state: directory
  become: yes
  when: site_config_type is defined
   and site_config_type == "template"

- name: "{{ site }} -- Templated configuration file"
  vars:
    site_settings: "{{ settings[ site ] }}"
  template:
    src: "{{ site_config_template }}"
    dest: "{{ site_config_file }}"
    mode: "644"
    owner: root
    group: "{{ metacpan_user | default(docker_mgmt.git.user) }}"
  become: yes
  when: site_config_type is defined
   and site_config_type == "template"
